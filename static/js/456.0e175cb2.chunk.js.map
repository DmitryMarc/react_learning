{"version":3,"file":"static/js/456.0e175cb2.chunk.js","mappings":"wPACA,EAA6B,4BAA7B,EAAiE,uBCAjE,EAAuB,mB,UCavB,EAZa,SAACA,GACV,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKC,IAAI,4FAA4FC,IAAI,WACvGJ,EAAMK,SACR,4BACI,mCADJ,IACwBL,EAAMM,kB,uCCDpCC,EAAUC,EAAAA,MAAY,SAAAR,GAUxBS,QAAQC,IAAI,aAEZ,IACIC,EADYX,EAAMY,MACQC,KAAI,SAAAC,GAAI,OAClC,SAAC,EAAD,CAAMT,QAASS,EAAKT,QAASC,WAAYQ,EAAKR,gBASlD,OACI,iBAAKL,UAAWC,EAAhB,WACI,sCACA,SAACa,EAAD,CAAqBC,SAPb,SAACC,GACbjB,EAAMkB,QAAQD,EAAOE,iBAOjB,gBAAKlB,UAAWC,EAAhB,SACKS,UAMXS,GAAaC,EAAAA,EAAAA,GAAiB,IAkBhCN,GAAsBO,EAAAA,EAAAA,GAAU,CAChCC,KAAM,yBADgBD,EAhBL,SAACtB,GAClB,OACI,kBAAMgB,SAAUhB,EAAMwB,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,YAAa,eACzCC,KAAK,cAAcC,SAAU,CAACC,EAAAA,EAAUX,QAI5C,0BACI,iDAUhB,IC1CA,GAFyBY,EAAAA,EAAAA,KAfD,SAACC,GACrB,MAAO,CACHrB,MAAOqB,EAAMC,YAAYC,UACzBhB,YAAac,EAAMC,YAAYf,gBAIZ,SAACiB,GACxB,MAAO,CACHlB,QAAS,SAACC,GACNiB,GAASC,EAAAA,EAAAA,IAAqBlB,QAKjBa,CAA6CzB,G,SClBtE,EAAmC,sC,SCyCnC,EAxC+B,SAACP,GAE5B,OAA8BsC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAStC,EAAMyC,QAAzC,eAAKA,EAAL,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACND,EAAU1C,EAAMyC,UACjB,CAACzC,EAAMyC,SAcV,OACI,4BACMF,IACE,0BACI,iBAAMK,cAhBG,WACrBJ,GAAY,IAeA,SACKxC,EAAMyC,QAAU,YAG5BF,IACG,0BACI,kBAAOM,SAdA,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAcVC,WAAW,EAAMC,OApBV,WACvBV,GAAY,GACZxC,EAAMmD,aAAaV,IAmBHO,MAAOP,UCZ/B,EAlBoB,SAAC,GAAqC,IAApCW,EAAmC,EAAnCA,QAASX,EAA0B,EAA1BA,OAAQU,EAAkB,EAAlBA,aACnC,OAAKC,GAKD,0BACI,0BACI,iBAAKnD,UAAWC,EAAhB,WACI,gBAAKC,IAAKiD,EAAQC,OAAOC,SACzB,SAAC,EAAD,CAAwBb,OAAQA,EAC5BU,aAAcA,YATvB,SAACI,EAAA,EAAD,KCKf,EATgB,SAACvD,GACb,OACI,4BACI,SAAC,EAAD,CAAaoD,QAASpD,EAAMoD,QAASX,OAAQzC,EAAMyC,OAAQU,aAAcnD,EAAMmD,gBAC/E,SAAC,EAAD,Q,oBCCNK,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAmBD,OAnBCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MACF,WACI,IAAIC,EAASC,KAAK1D,MAAM2D,MAAMC,OAAOH,OACjCA,IACAA,EAASC,KAAK1D,MAAM6D,mBAEhBH,KAAK1D,MAAM8D,QAAQC,KAAK,UAIhCL,KAAK1D,MAAMgE,eAAeP,GAC1BC,KAAK1D,MAAMiE,UAAUR,KACxB,oBAED,WACI,OACI,SAAC,GAAD,kBAAaC,KAAK1D,OAAlB,IAAyBoD,QAASM,KAAK1D,MAAMoD,QAC7CX,OAAQiB,KAAK1D,MAAMyC,OAAQU,aAAcO,KAAK1D,MAAMmD,oBAE3D,EAnBCK,CAAyBhD,EAAAA,WA+B/B,GAAe0D,EAAAA,EAAAA,KACXlC,EAAAA,EAAAA,KAVkB,SAACC,GACnB,MAAO,CACHmB,QAASnB,EAAMC,YAAYkB,QAC3BX,OAAQR,EAAMC,YAAYO,OAC1BoB,iBAAkB5B,EAAMkC,KAAKV,OAC7BW,OAAQnC,EAAMkC,KAAKC,UAMnB,CAACJ,eAAgBK,EAAAA,GACjBJ,UAAWK,EAAAA,GACXnB,aAAcoB,EAAAA,KAElBC,EAAAA,GANJ,CAOEhB","sources":["webpack://react-training-1/./src/Components/Profile/MyPosts/MyPosts.module.css?bd90","webpack://react-training-1/./src/Components/Profile/MyPosts/Post/Post.module.css?54ab","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-training-1/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__9cSVL\",\"posts\":\"MyPosts_posts__TPsYA\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__+5aXk\"};","import classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src=\"https://i.pinimg.com/736x/38/07/45/3807452de810352bca9c0587863ebece--avatar-film-nerd.jpg\" alt=\"avatar\" />\r\n            { props.message }\r\n            <div>\r\n                <span>like</span> { props.likesCount }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo( props => {\r\n    // componentDidMount(){\r\n    //     setTimeout(() => {\r\n    //         this.setState({a:12})\r\n    //     }, 3000)\r\n    // }\r\n\r\n    // shouldComponentUpdate(nextProps, nextState){\r\n    //     return nextProps != this.props || nextState != this.state;\r\n    // }\r\n    console.log(\"RENDER YO\");\r\n\r\n    let postsData = props.posts;\r\n    let postsElements = postsData.map(post =>\r\n        <Post message={post.message} likesCount={post.likesCount} />\r\n    );\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLengt10 = maxLengthCreator(10)\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} placeholder={\"Post message\"} \r\n                name=\"newPostText\" validate={[required, maxLengt10]} />\r\n                {/* <textarea onChange={onPostChange} name=\"\" ref={newPostElement} \r\n                cols=\"30\" rows=\"10\" value={props.newPostText} /> */}\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({\r\n    form: \"ProfileAddNewPostForm\"\r\n})(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n\r\n\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport { addPostActionCreator} from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    } \r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Inoui\"};","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || \"-----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                        autoFocus={true} onBlur={deactivateEditMode}\r\n                        value={status}></input>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import Preloader from '../../common/Preloader/Preloader';\r\nimport classes from './ProfileInfo.module.css';\r\n//import ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className={classes.descriptionBlock}>\r\n                    <img src={profile.photos.small} />\r\n                    <ProfileStatusWithHooks status={status}\r\n                        updateStatus={updateStatus} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n\r\n","import MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile'; \r\nimport {withRouter} from 'react-router-dom';\r\nimport {getStatusThunkCreator, getUserProfileThunkCreator, \r\n    updateStatusThunkCreator} from '../../Redux/profile-reducer';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount(){\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId; //Мой профиль!!!\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n                //редирект на логин, если нет id юзера (мой id)\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (      \r\n            <Profile {...this.props} profile={this.props.profile} \r\n            status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, \r\n        {getUserProfile: getUserProfileThunkCreator,\r\n        getStatus: getStatusThunkCreator,\r\n        updateStatus: updateStatusThunkCreator\r\n        }),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"names":["props","className","classes","src","alt","message","likesCount","MyPosts","React","console","log","postsElements","posts","map","post","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLengt10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","connect","state","profilePage","postsData","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","small","Preloader","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","getUserProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","withRouter"],"sourceRoot":""}