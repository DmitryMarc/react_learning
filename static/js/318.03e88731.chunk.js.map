{"version":3,"file":"static/js/318.03e88731.chunk.js","mappings":"6QAIIA,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,S,2DCL3B,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BCW7K,EATmB,SAACE,GAChB,OACI,gBAAKC,UAAWC,EAAiB,IAAMA,EAAvC,UACI,SAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GAAjC,SAAsCJ,EAAMK,UCExD,EANgB,SAACL,GACb,OACI,gBAAKC,UAAWC,EAAhB,SAAiCF,EAAMM,WCoCzCC,GAAcC,EAAAA,EAAAA,GAAiB,IAe/BC,GAAsBC,EAAAA,EAAAA,GAAU,CACtCC,KAAM,wBADsBD,EAbL,SAACV,GACpB,OACI,kBAAMY,SAAUZ,EAAMa,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAClBC,SAAU,CAACC,EAAAA,EAAUX,GAAcF,KAAK,iBAAiBc,YAAY,0BAGzE,0BAAK,6CASjB,EApDgB,SAACnB,GACb,IAAIH,EAAQG,EAAMoB,YAEdC,EAAUxB,EAAMwB,QAChBC,EAAWzB,EAAMyB,SAEjBC,EAAkBF,EAAQG,KAAI,SAAAC,GAAM,OACpC,SAAC,EAAD,CAAYpB,KAAMoB,EAAOpB,KAAsBD,GAAIqB,EAAOrB,IAAtBqB,EAAOrB,OAG3CsB,EAAmBJ,EAASE,KAAI,SAAAlB,GAAO,OACvC,SAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQF,OAG/BP,EAAM8B,eAM3B,OACI,iBAAK1B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKqB,KAEL,iBAAKtB,UAAWC,EAAhB,WACI,yBAAMwB,KACN,SAACjB,EAAD,CAAqBG,SAXb,SAACgB,GACjB5B,EAAM6B,YAAYD,EAAOD,0BCJjC,GAAeG,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAAClC,GACnB,MAAO,CACHuB,YAAavB,EAAMuB,gBAIF,SAACY,GACtB,MAAO,CACHH,YAAa,SAACF,GACVK,GAASC,EAAAA,EAAAA,GAAmBN,ULLR,SAACO,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAKpC,MAAMF,QAET,SAACoC,GAAD,UAAeE,KAAKpC,SADhB,SAAC,KAAD,CAAUG,GAAG,eAJW,GACXkC,EAAAA,WAUhC,OAFqCN,EAAAA,EAAAA,IAAQnC,EAARmC,CAAoCI,KKC7E,CAGEG","sources":["hoc/withAuthRedirect.js","webpack://react-training-1/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n//HOC\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) \r\n                return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Chnkj\",\"dialogsItems\":\"Dialogs_dialogsItems__z1e36\",\"active\":\"Dialogs_active__c-9aL\",\"dialog\":\"Dialogs_dialog__GyEkq\",\"messages\":\"Dialogs_messages__lqNfK\",\"message\":\"Dialogs_message__bEAwF\"};","import { NavLink } from 'react-router-dom';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DialogItem;","import classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.dialog}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport classes from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogs = state.dialogs;\r\n    let messages = state.messages;\r\n\r\n    let dialogsElements = dialogs.map(dialog =>\r\n        <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n    );\r\n\r\n    let messagesElements = messages.map(message =>\r\n        <Message message={message.message} key={message.id} />\r\n    );\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} \r\n                validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n                {/* <textarea value={newMessageBody} onChange={onNewMessageChange} placeholder='Enter your message'></textarea> */}\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\nform: \"dialogAddMessageForm\"\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageCreator} from '../../Redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        } \r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","props","className","classes","to","id","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","dialogsPage","dialogs","messages","dialogsElements","map","dialog","messagesElements","newMessageBody","values","sendMessage","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}